import 'package:cat_breeds/features/cat_breed/data/models/cat_weight_model.dart';
import 'package:cat_breeds/features/cat_breed/domain/entities/cat_breed_entity.dart';

class CatBreedModel extends CatBreedEntity {
  const CatBreedModel({
    required CatWeightModel super.weight,
    required super.id,
    required super.name,
    required super.cfaUrl,
    required super.vetstreetUrl,
    required super.vcahospitalsUrl,
    required super.temperament,
    required super.origin,
    required super.countryCodes,
    required super.countryCode,
    required super.description,
    required super.lifeSpan,
    required super.indoor,
    required super.lap,
    required super.adaptability,
    required super.affectionLevel,
    required super.childFriendly,
    required super.catFriendly,
    required super.dogFriendly,
    required super.energyLevel,
    required super.grooming,
    required super.healthIssues,
    required super.intelligence,
    required super.sheddingLevel,
    required super.socialNeeds,
    required super.strangerFriendly,
    required super.vocalisation,
    required super.bidability,
    required super.experimental,
    required super.hairless,
    required super.natural,
    required super.rare,
    required super.rex,
    required super.suppressedTail,
    required super.shortLegs,
    required super.wikipediaUrl,
    required super.hypoallergenic,
    required super.referenceImageId,
    required super.altNames,
  });

  factory CatBreedModel.fromMap(Map<String, dynamic> map) {
    return CatBreedModel(
      weight: CatWeightModel.fromJson(map['weight']),
      id: map['id'],
      name: map['name'],
      cfaUrl: map['cfaUrl'],
      vetstreetUrl: map['vetstreetUrl'],
      vcahospitalsUrl: map['vcahospitalsUrl'],
      temperament: map['temperament'],
      origin: map['origin'],
      countryCodes: map['countryCodes'],
      countryCode: map['countryCode'],
      description: map['description'],
      lifeSpan: map['lifeSpan'],
      indoor: map['indoor'],
      lap: map['lap'],
      adaptability: map['adaptability'],
      affectionLevel: map['affectionLevel'],
      childFriendly: map['childFriendly'],
      catFriendly: map['catFriendly'],
      dogFriendly: map['dogFriendly'],
      energyLevel: map['energyLevel'],
      grooming: map['grooming'],
      healthIssues: map['healthIssues'],
      intelligence: map['intelligence'],
      sheddingLevel: map['sheddingLevel'],
      socialNeeds: map['socialNeeds'],
      strangerFriendly: map['strangerFriendly'],
      vocalisation: map['vocalisation'],
      bidability: map['bidability'],
      experimental: map['experimental'],
      hairless: map['hairless'],
      natural: map['natural'],
      rare: map['rare'],
      rex: map['rex'],
      suppressedTail: map['suppressedTail'],
      shortLegs: map['shortLegs'],
      wikipediaUrl: map['wikipediaUrl'],
      hypoallergenic: map['hypoallergenic'],
      referenceImageId: map['referenceImageId'],
      altNames: map['altNames'],
    );
  }
}